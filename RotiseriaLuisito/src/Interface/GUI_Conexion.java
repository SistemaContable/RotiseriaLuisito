/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface;

import Auxiliares.Conexion;
import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manolo
 */
public class GUI_Conexion extends javax.swing.JFrame {

    /**
     * Creates new form GUI_A_Prod
     */
    private final Conexion r_con;
    private final String nombre_BD_Sistema = "BD_Sistema";
    private final String script_BD_Sistema = "SQLQuery_Load_DB_Sistema.sql";
    
    public GUI_Conexion() {
        initComponents();
        setDefaultCloseOperation(0);
        setLocationRelativeTo(null);
        setResizable(false);
        
        //creo la conexion
        r_con = new Conexion();
        
        //para panel 1       
        buttonGuardar.setEnabled(false);
        //para panel 2
        checkboxDirectorio.setSelected(true);
        fieldNombreCarpeta.setEnabled(false);
        //para panel 3
        checkboxAlta.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        labelTitulo = new javax.swing.JLabel();
        tabbedPaneOpciones = new javax.swing.JTabbedPane();
        panelConexion = new javax.swing.JPanel();
        fieldURL = new javax.swing.JTextField();
        fieldPuerto = new javax.swing.JTextField();
        fieldUsuario = new javax.swing.JTextField();
        fieldContrasena = new javax.swing.JTextField();
        buttonProbar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        labelAviso = new javax.swing.JLabel();
        labelURL = new javax.swing.JLabel();
        labelEj = new javax.swing.JLabel();
        labelPuerto = new javax.swing.JLabel();
        labelDefecto = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        labelContrasena = new javax.swing.JLabel();
        labelMensaje = new javax.swing.JLabel();
        panelDirectorio = new javax.swing.JPanel();
        labelAviso2 = new javax.swing.JLabel();
        checkboxDirectorio = new javax.swing.JCheckBox();
        checkboxEspedificar = new javax.swing.JCheckBox();
        fieldNombreCarpeta = new javax.swing.JTextField();
        buttonCrear = new javax.swing.JButton();
        labelNombreCarpeta = new javax.swing.JLabel();
        labelMensaje2 = new javax.swing.JLabel();
        panelUsuarios = new javax.swing.JPanel();
        labelAviso3 = new javax.swing.JLabel();
        labelUsuarioSistema = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        checkboxAlta = new javax.swing.JCheckBox();
        checkboxBaja = new javax.swing.JCheckBox();
        fieldUsuarioAdmin = new javax.swing.JTextField();
        fieldContrasenaAdmin = new javax.swing.JTextField();
        buttonConfirmar = new javax.swing.JButton();
        labelNuevo = new javax.swing.JLabel();
        labelUsuarioAdmin = new javax.swing.JLabel();
        labelContrasenaAdmin = new javax.swing.JLabel();
        labelMensaje3 = new javax.swing.JLabel();
        buttonCancelar = new javax.swing.JButton();

        setTitle("Configuración del Sistema");
        setBackground(new java.awt.Color(204, 204, 204));
        setIconImage(Toolkit.getDefaultToolkit().getImage("_icono.png"));

        labelTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("Configuración del Sistema:");

        tabbedPaneOpciones.setMinimumSize(new java.awt.Dimension(115, 60));
        tabbedPaneOpciones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneOpcionesStateChanged(evt);
            }
        });

        panelConexion.setPreferredSize(new java.awt.Dimension(610, 330));

        fieldURL.setText("localhost");
        fieldURL.setToolTipText("");

        fieldPuerto.setText("3306");
        fieldPuerto.setToolTipText("");

        fieldUsuario.setToolTipText("");

        fieldContrasena.setToolTipText("");

        buttonProbar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/check.png"))); // NOI18N
        buttonProbar.setText("Probar Conexión");
        buttonProbar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonProbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProbarActionPerformed(evt);
            }
        });

        buttonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        buttonGuardar.setText("Guardar");
        buttonGuardar.setToolTipText("");
        buttonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        labelAviso.setText("Especifique los valores que utilizará el Programa para conectarse al Sistema Gestor de Base de Datos:");
        labelAviso.setToolTipText("");

        labelURL.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelURL.setText("URL:");

        labelEj.setText("Ejemplo: localhost, 192.168.1.1");

        labelPuerto.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelPuerto.setText("Puerto:");

        labelDefecto.setText("Defecto: 3306");

        labelUsuario.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelUsuario.setText("Usuario:");

        labelContrasena.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelContrasena.setText("Contraseña:");

        labelMensaje.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelMensaje.setForeground(new java.awt.Color(0, 153, 51));
        labelMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMensaje.setLabelFor(buttonProbar);
        labelMensaje.setText(" ");

        javax.swing.GroupLayout panelConexionLayout = new javax.swing.GroupLayout(panelConexion);
        panelConexion.setLayout(panelConexionLayout);
        panelConexionLayout.setHorizontalGroup(
            panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConexionLayout.createSequentialGroup()
                .addGap(0, 56, Short.MAX_VALUE)
                .addComponent(labelAviso, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelConexionLayout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConexionLayout.createSequentialGroup()
                        .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelURL, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelPuerto, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelConexionLayout.createSequentialGroup()
                                .addComponent(fieldPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelDefecto))
                            .addGroup(panelConexionLayout.createSequentialGroup()
                                .addComponent(fieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelEj)))
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConexionLayout.createSequentialGroup()
                        .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(buttonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonProbar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelConexionLayout.createSequentialGroup()
                                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelUsuario)
                                    .addComponent(labelContrasena))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fieldContrasena)
                                    .addComponent(fieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(260, 260, 260))))
            .addComponent(labelMensaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelConexionLayout.setVerticalGroup(
            panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConexionLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelAviso, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelURL)
                    .addComponent(fieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEj))
                .addGap(18, 18, 18)
                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDefecto)
                    .addComponent(labelPuerto))
                .addGap(59, 59, 59)
                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(fieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelConexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelContrasena))
                .addGap(18, 18, 18)
                .addComponent(labelMensaje)
                .addGap(1, 1, 1)
                .addComponent(buttonProbar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonGuardar)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        tabbedPaneOpciones.addTab("Conexión", panelConexion);

        labelAviso2.setText("Especifique el Directorio donde se almacenaran todas las Bases de Datos del Sistema:");
        labelAviso2.setToolTipText("");

        buttonGroup2.add(checkboxDirectorio);
        checkboxDirectorio.setText("Almacenar las Bases de Datos en el mismo Directorio del Aplicativo");

        buttonGroup2.add(checkboxEspedificar);
        checkboxEspedificar.setText("Especificar un Directorio de creación");
        checkboxEspedificar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxEspedificarItemStateChanged(evt);
            }
        });

        fieldNombreCarpeta.setToolTipText("");

        buttonCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        buttonCrear.setText("Crear y Continuar");
        buttonCrear.setToolTipText("");
        buttonCrear.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCrearActionPerformed(evt);
            }
        });

        labelNombreCarpeta.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelNombreCarpeta.setText("Nombre de la Carpeta:");

        labelMensaje2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelMensaje2.setForeground(java.awt.Color.red);
        labelMensaje2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelMensaje2.setLabelFor(buttonProbar);
        labelMensaje2.setText(" ");

        javax.swing.GroupLayout panelDirectorioLayout = new javax.swing.GroupLayout(panelDirectorio);
        panelDirectorio.setLayout(panelDirectorioLayout);
        panelDirectorioLayout.setHorizontalGroup(
            panelDirectorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDirectorioLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelDirectorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkboxEspedificar)
                    .addComponent(checkboxDirectorio)
                    .addGroup(panelDirectorioLayout.createSequentialGroup()
                        .addComponent(labelNombreCarpeta)
                        .addGap(26, 26, 26)
                        .addGroup(panelDirectorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMensaje2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fieldNombreCarpeta))))
                .addGap(184, 184, 184))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDirectorioLayout.createSequentialGroup()
                .addGap(0, 51, Short.MAX_VALUE)
                .addComponent(labelAviso2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDirectorioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );
        panelDirectorioLayout.setVerticalGroup(
            panelDirectorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDirectorioLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelAviso2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(checkboxDirectorio)
                .addGap(32, 32, 32)
                .addComponent(checkboxEspedificar)
                .addGap(32, 32, 32)
                .addComponent(labelMensaje2)
                .addGap(30, 30, 30)
                .addGroup(panelDirectorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombreCarpeta)
                    .addComponent(fieldNombreCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(buttonCrear)
                .addContainerGap())
        );

        tabbedPaneOpciones.addTab("Directorio BD", panelDirectorio);

        labelAviso3.setText("Cree Usuarios con privilegios sobre el Sistema, como el de Crear y Eliminar Empresas.");
        labelAviso3.setToolTipText("");

        labelUsuarioSistema.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelUsuarioSistema.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsuarioSistema.setText("Usuarios del Sistema:");

        jScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane.setFocusable(false);
        jScrollPane.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Contraseña"
            }
        ));
        jTable1.setFocusable(false);
        jScrollPane.setViewportView(jTable1);

        buttonGroup3.add(checkboxAlta);
        checkboxAlta.setText("Alta");
        checkboxAlta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxAltaItemStateChanged(evt);
            }
        });

        buttonGroup3.add(checkboxBaja);
        checkboxBaja.setText(" Baja");
        checkboxBaja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkboxBajaItemStateChanged(evt);
            }
        });

        fieldUsuarioAdmin.setToolTipText("");

        fieldContrasenaAdmin.setToolTipText("");

        buttonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        buttonConfirmar.setText("Boton");
        buttonConfirmar.setToolTipText("");
        buttonConfirmar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarActionPerformed(evt);
            }
        });

        labelNuevo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelNuevo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNuevo.setText("Nuevo Usuario:");

        labelUsuarioAdmin.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelUsuarioAdmin.setText("Usuario:");

        labelContrasenaAdmin.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        labelContrasenaAdmin.setText("Contraseña:");

        labelMensaje3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelMensaje3.setForeground(new java.awt.Color(0, 153, 51));
        labelMensaje3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMensaje3.setText(" ");

        javax.swing.GroupLayout panelUsuariosLayout = new javax.swing.GroupLayout(panelUsuarios);
        panelUsuarios.setLayout(panelUsuariosLayout);
        panelUsuariosLayout.setHorizontalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUsuariosLayout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(labelUsuarioAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldUsuarioAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelUsuariosLayout.createSequentialGroup()
                        .addGap(438, 438, 438)
                        .addComponent(checkboxAlta)
                        .addGap(46, 46, 46)
                        .addComponent(checkboxBaja))
                    .addGroup(panelUsuariosLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(labelContrasenaAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldContrasenaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsuariosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelAviso3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelUsuariosLayout.createSequentialGroup()
                        .addComponent(labelUsuarioSistema)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(labelMensaje3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsuariosLayout.createSequentialGroup()
                        .addComponent(buttonConfirmar)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsuariosLayout.createSequentialGroup()
                        .addComponent(labelNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panelUsuariosLayout.setVerticalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelAviso3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUsuarioSistema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelUsuariosLayout.createSequentialGroup()
                        .addComponent(labelNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkboxBaja)
                            .addComponent(checkboxAlta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldUsuarioAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelUsuarioAdmin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldContrasenaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelContrasenaAdmin))
                        .addGap(25, 25, 25)
                        .addComponent(buttonConfirmar))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(labelMensaje3)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        tabbedPaneOpciones.addTab("Usuarios del Sistema", panelUsuarios);

        buttonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        buttonCancelar.setText("Cancelar");
        buttonCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabbedPaneOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPaneOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCancelar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * metodo que se usa en caso de entrar por el loggin y no por el
     * algoritomo de control de conexion
     */
    public void GUI_configuracion (){
        r_con.setBase_datos(nombre_BD_Sistema);                
        tabbedPaneOpciones.setEnabledAt(1, false);
        buttonCancelar.setText("Salir");
    }
    
    /**
     * metodo principal cuyo proposito es controlar que todos los elementos
     * necesarios para la conexion existar, caso contrario obliga a crearlos
     * (archivo de conexion, BD Sistema, Usuarios del Sistema)
     */
    public void generarConexion (){
        deshabilitarPaneles();
        //caso en que no existe el archivo con los parametros de Conexion
        if (! r_con.existeConexion()) {
            tabbedPaneOpciones.setEnabledAt(0, true);
            tabbedPaneOpciones.setSelectedIndex(0);
        }
        else{
            r_con.abrirConexion();
            //caso en que no existe la base de datos del Sistema
            if (! r_con.existeDatabase(nombre_BD_Sistema)){
                tabbedPaneOpciones.setEnabledAt(1, true);
                tabbedPaneOpciones.setSelectedIndex(1);
            }
            else{                            
                //seteo el nombre de la base de datos del sistema
                r_con.cerrarConexion();
                r_con.setBase_datos(nombre_BD_Sistema);    
                //al seleccionar el 3er panel va a listar los usuarios y cierra la conexion
                tabbedPaneOpciones.setEnabledAt(2, true);
                tabbedPaneOpciones.setSelectedIndex(2);
                //vuelvo a abrir la conexion
                r_con.abrirConexion();
                if (r_con.cantidadRegistros("Usuarios")>0){                     
                    buttonCancelar.setText("Salir");                    
                } 
                else{
                    this.msj_usuario_Error("Registre al menos un Usuario en el Sistema.");
                }
                cargarUsuarios ();
                r_con.cerrarConexion();
            }
             r_con.cerrarConexion();
        }       
    }
    
    /**
     * metodo que controla si todos los elementos necesarios para el funcionamiento del
     * sistema existen, devuelve true si existen todos.
     * @return true si existe el archivo de conexion, la BD del sistema y al menos 1 usuario
     */
    public boolean validarConexion (){
        boolean rta = false;
         if (r_con.existeConexion()) {
             r_con.abrirConexion();
             if (r_con.existeDatabase(nombre_BD_Sistema)){
                 r_con.setBase_datos(nombre_BD_Sistema);
                 r_con.abrirConexion();
                 if (r_con.cantidadRegistros("Usuarios")>0){
                     rta = true;
                 }
                 r_con.cerrarConexion();
             }
             r_con.cerrarConexion();
         }
         return (rta);
    }
    
    /**
     * devuelve la conexion
     * @return objeto Conexion
     */
    public Conexion getConexion (){
        return (r_con);
    }
    
    /**
     * deshabilita todos los paneles de jTabbedPane1
     */
    private void deshabilitarPaneles (){
        for (int i = 0; i < tabbedPaneOpciones.getComponentCount(); i++) {
            tabbedPaneOpciones.setEnabledAt(i, false);
        }        
    }
    
    private void limpiarPanelConexion() {
        fieldURL.setText(null);
        fieldPuerto.setText(null);
        fieldUsuario.setText(null);
        fieldContrasena.setText(null);
        labelMensaje.setText(" ");
        buttonGuardar.setEnabled(false);
    }    
    
    /**
     * oyenye del boton salir, si sale por cancelar (en el intento de configurar)
     * cierra el form, sino, abre el inicio de Sesion
     * @param evt 
     */
    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        if("Salir".equals(buttonCancelar.getText())){
            this.dispose();
            GUI_Inicio_Sesion IS = new GUI_Inicio_Sesion(r_con);
            IS.setVisible(true);
        }
        else{
            this.dispose();
        }
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarActionPerformed
        if (("".equals(fieldUsuarioAdmin.getText()))){
            this.msj_usuario_Error("Complete TODOS los Campos.");
        }
        else{
            r_con.abrirConexion();
            if (checkboxAlta.isSelected()){
                boolean rta = r_con.Insertar("INSERT INTO Usuarios VALUES ("
                    + "'"+fieldUsuarioAdmin.getText()+"','"+fieldContrasenaAdmin.getText()+"');");
                if (rta){
                    this.msj_usuario_Exito("Alta Correcto.");
                }
            }
            else{
                boolean rta = r_con.Borrar("DELETE FROM Usuarios WHERE usr_nombre_usuario = '"+fieldUsuarioAdmin.getText()+"'");
                if (rta){
                    this.msj_usuario_Exito("Baja Correcto.");
                }
            }
            fieldUsuarioAdmin.setText("");
            fieldContrasenaAdmin.setText("");
            fieldUsuarioAdmin.requestFocus();

            //controlo que haya usuarios para no volver a llamar a Validar (tiempo de ejecucion)
            if (r_con.cantidadRegistros("Usuarios")>0){
                buttonCancelar.setText("Salir");
                buttonCancelar.setEnabled(true);
            }
            else{
                this.msj_usuario_Error("Registre al menos un Usuario en el Sistema.");
                buttonCancelar.setEnabled(false);
            }
            cargarUsuarios ();
            r_con.cerrarConexion();
        }
    }//GEN-LAST:event_buttonConfirmarActionPerformed

    private void checkboxBajaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxBajaItemStateChanged
        if (checkboxBaja.isSelected()){
            labelNuevo.setText("Baja Usuario:");
            fieldContrasenaAdmin.setEnabled(false);
            buttonConfirmar.setText("Elminar");
            buttonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/eliminar.png")));

        }
    }//GEN-LAST:event_checkboxBajaItemStateChanged

    private void checkboxAltaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxAltaItemStateChanged
        if (checkboxAlta.isSelected()){
            labelNuevo.setText("Alta Usuario:");
            fieldContrasenaAdmin.setEnabled(true);
            buttonConfirmar.setText("Registrar");
            buttonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png")));
        }
    }//GEN-LAST:event_checkboxAltaItemStateChanged

    private void buttonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCrearActionPerformed
        File fichero = new File(script_BD_Sistema);
        //como voy a crear la BD Sistema, me fijo si existe el script de creacion de las tablas
        if (fichero.exists()){
            String ruta_aplic = System.getProperty("user.dir");
            if ("".equals(fieldNombreCarpeta.getText())) {
                fieldNombreCarpeta.requestFocus();
                labelMensaje2.setText("Ingrese un Nombre para la Carpeta");
            } else {
                labelMensaje2.setText(" ");
                File carpeta;
                String nombre_carpeta = fieldNombreCarpeta.getText();
                if (checkboxDirectorio.isSelected()) {
                    carpeta = new File(ruta_aplic + "\\" + nombre_carpeta);
                        carpeta.mkdir();
                    } else {
                        JFileChooser directorio = new JFileChooser();
                        directorio.setCurrentDirectory(new File(ruta_aplic));
                        directorio.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                        int result = directorio.showDialog(null, "Seleccione la ruta");
                        String ruta = null;
                        if (result == JFileChooser.APPROVE_OPTION) {
                            ruta = directorio.getSelectedFile().getPath();
                        }
                        carpeta = new File(ruta + "\\" + nombre_carpeta);
                            carpeta.mkdirs();
                        }
                        //conecto
                        r_con.abrirConexion();
                        //creo la base de datos del sistema
                        r_con.crearDatabase_DIR(nombre_BD_Sistema, carpeta.getPath());
                        //cierro la conexion ya que ahora existe la BD del Sistema
                        r_con.cerrarConexion();
                        //seteo el nombre de la base de datos del sistema
                        r_con.setBase_datos(nombre_BD_Sistema);
                        //abro la nueva Conexion
                        r_con.abrirConexion();
                        //ejecuto el script para cargar las tablas
                        r_con.executeScripts(script_BD_Sistema);
                        //guardo el directorio elegido en la tabla Directorios del Sistema
                        r_con.Insertar("INSERT INTO Directorios VALUES "
                            + "('Directorio_Database_Sistema','"+carpeta.getAbsolutePath()+"');");
                        r_con.cerrarConexion();
                    }
                }
                else{
                    String msj = ("El Sistema no encuentra el archivo con el script "
                        + " '"+script_BD_Sistema+"'  necesario \npara cargar"
                        + "las tablas de la base de datos del Sistema por favor póngase en"
                        + "contacto con \nel Administrador para solucionar el problema.");
                    JOptionPane.showMessageDialog(null, msj, "Falta fichero del Sistema", JOptionPane.ERROR_MESSAGE);
                }
                generarConexion ();
    }//GEN-LAST:event_buttonCrearActionPerformed

    private void checkboxEspedificarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkboxEspedificarItemStateChanged
        fieldNombreCarpeta.setEnabled(checkboxEspedificar.isSelected());
        if (checkboxEspedificar.isSelected()){            
            fieldNombreCarpeta.requestFocus();
        }
    }//GEN-LAST:event_checkboxEspedificarItemStateChanged

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        boolean rta = false;

        rta = r_con.validarConexion(fieldURL.getText(), fieldPuerto.getText(), fieldUsuario.getText(), fieldContrasena.getText());
        
        if (rta) {
            r_con.setUrl(fieldURL.getText());
            if (!"".equals(fieldPuerto.getText())) {
                r_con.setPort(fieldPuerto.getText());
            }
            
            r_con.setUsuario(fieldUsuario.getText());
            r_con.setClave(fieldContrasena.getText());
            r_con.grabarConexion(r_con);

            limpiarPanelConexion();
            generarConexion ();
        }
        else {
            msj_conexion_Error();
            JOptionPane.showMessageDialog(null, "Se ha modifificado algún parametro y la conexion ya no es valida.", "Ups!", JOptionPane.INFORMATION_MESSAGE);
            fieldURL.requestFocus();
        }
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonProbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProbarActionPerformed
        boolean rta = false;

        rta = r_con.validarConexion(fieldURL.getText(), fieldPuerto.getText(), fieldUsuario.getText(), fieldContrasena.getText());
        
        if (rta) {
            msj_conexion_Exito();
            buttonGuardar.setEnabled(true);
        } else {
            msj_conexion_Error();
        }
    }//GEN-LAST:event_buttonProbarActionPerformed

    private void tabbedPaneOpcionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneOpcionesStateChanged
        if (tabbedPaneOpciones.getSelectedIndex()==2){
            cargarUsuarios ();
        }
    }//GEN-LAST:event_tabbedPaneOpcionesStateChanged

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonConfirmar;
    private javax.swing.JButton buttonCrear;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonProbar;
    private javax.swing.JCheckBox checkboxAlta;
    private javax.swing.JCheckBox checkboxBaja;
    private javax.swing.JCheckBox checkboxDirectorio;
    private javax.swing.JCheckBox checkboxEspedificar;
    private javax.swing.JTextField fieldContrasena;
    private javax.swing.JTextField fieldContrasenaAdmin;
    private javax.swing.JTextField fieldNombreCarpeta;
    private javax.swing.JTextField fieldPuerto;
    private javax.swing.JTextField fieldURL;
    private javax.swing.JTextField fieldUsuario;
    private javax.swing.JTextField fieldUsuarioAdmin;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelAviso;
    private javax.swing.JLabel labelAviso2;
    private javax.swing.JLabel labelAviso3;
    private javax.swing.JLabel labelContrasena;
    private javax.swing.JLabel labelContrasenaAdmin;
    private javax.swing.JLabel labelDefecto;
    private javax.swing.JLabel labelEj;
    private javax.swing.JLabel labelMensaje;
    private javax.swing.JLabel labelMensaje2;
    private javax.swing.JLabel labelMensaje3;
    private javax.swing.JLabel labelNombreCarpeta;
    private javax.swing.JLabel labelNuevo;
    private javax.swing.JLabel labelPuerto;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelURL;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JLabel labelUsuarioAdmin;
    private javax.swing.JLabel labelUsuarioSistema;
    private javax.swing.JPanel panelConexion;
    private javax.swing.JPanel panelDirectorio;
    private javax.swing.JPanel panelUsuarios;
    private javax.swing.JTabbedPane tabbedPaneOpciones;
    // End of variables declaration//GEN-END:variables

    public void setTitleLabel(String t) {
        this.labelTitulo.setText(t);
    }
    
    private void vaciarMensaje() {
        labelMensaje3.setText(" ");
    }
    
    private void msj_usuario_Exito(String msj) {
        labelMensaje3.setText(msj);
        labelMensaje3.setForeground(new java.awt.Color(0, 153, 51));
    }
    
    private void msj_usuario_Error(String msj) {
        labelMensaje3.setText(msj);
        labelMensaje3.setForeground(Color.RED);
    }
    
    private void msj_conexion_Exito() {
        labelMensaje.setText("CONEXIÓN EXITOSA");
        labelMensaje.setForeground(new java.awt.Color(0, 153, 51));
    }
    
    private void msj_conexion_Error() {
        labelMensaje.setText("CONEXIÓN FALLIDA");
        labelMensaje.setForeground(Color.RED);
    }
    
    private void cargarUsuarios (){
        r_con.abrirConexion();  
        DefaultTableModel modelo = new DefaultTableModel();
        String [] nombre_columnas = {"Usuario","Contraseña"};                           
        modelo.setColumnIdentifiers(nombre_columnas);               
        Vector <Vector<String>> v = r_con.getContenidoTabla("SELECT * FROM Usuarios");
        for(Vector <String> a : v)
            modelo.addRow(a);
        
        jTable1.setModel(modelo);
        r_con.cerrarConexion();
    }

}
